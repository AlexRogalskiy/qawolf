// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`buildCode builds a script for a workflow 1`] = `
"const { launch } = require(\\"qawolf\\");
const selectors = require(\\"../selectors/scrollLogin\\");

const scrollLogin = async () => {
  const context = await launch({ url: \\"localhost:5000\\" });
  // scroll
  await context.scroll(selectors[0], { x: 0, y: 378 });
  // click \\"Form Authentication\\" link
  await context.click(selectors[1]);
  // type into \\"Username\\" input
  await context.type(selectors[2], \\"tomsmith\\");
  // Tab
  await context.type(selectors[3], \\"↓Tab↑Tab\\");
  // type into \\"Password\\" input
  await context.type(selectors[4], \\"SuperSecretPassword!\\");
  // Enter
  await context.type(selectors[5], \\"↓Enter↑Enter\\");
  // click \\"Logout\\" link
  await context.click(selectors[6]);
  await context.close();
};

scrollLogin();"
`;

exports[`buildCode builds a script for a workflow 2`] = `
"const { launch } = require(\\"qawolf\\");
const selectors = require(\\"../selectors/scrollLogin\\");

const scrollLogin = async () => {
  const context = await launch({ device: \\"iPhone 7\\", url: \\"localhost:5000\\" });
  // scroll
  await context.scroll(selectors[0], { x: 0, y: 378 });
  // click \\"Form Authentication\\" link
  await context.click(selectors[1]);
  // type into \\"Username\\" input
  await context.type(selectors[2], \\"tomsmith\\");
  // Tab
  await context.type(selectors[3], \\"↓Tab↑Tab\\");
  // type into \\"Password\\" input
  await context.type(selectors[4], \\"SuperSecretPassword!\\");
  // Enter
  await context.type(selectors[5], \\"↓Enter↑Enter\\");
  // click \\"Logout\\" link
  await context.click(selectors[6]);
  await context.close();
};

scrollLogin();"
`;

exports[`buildCode builds a test for a workflow 1`] = `
"const { launch } = require(\\"qawolf\\");
const selectors = require(\\"../selectors/scrollLogin\\");

describe('scrollLogin', () => {
  let context;

  beforeAll(async () => {
    context = await launch({ url: \\"localhost:5000\\" });
  });

  afterAll(() => context.close());

  it('can scroll', async () => {
    await context.scroll(selectors[0], { x: 0, y: 378 });
  });

  it('can click \\"Form Authentication\\" link', async () => {
    await context.click(selectors[1]);
  });

  it('can type into \\"Username\\" input', async () => {
    await context.type(selectors[2], \\"tomsmith\\");
  });

  it('can Tab', async () => {
    await context.type(selectors[3], \\"↓Tab↑Tab\\");
  });

  it('can type into \\"Password\\" input', async () => {
    await context.type(selectors[4], \\"SuperSecretPassword!\\");
  });

  it('can Enter', async () => {
    await context.type(selectors[5], \\"↓Enter↑Enter\\");
  });

  it('can click \\"Logout\\" link', async () => {
    await context.click(selectors[6]);
  });
});"
`;

exports[`buildCode builds a test for a workflow 2`] = `
"const { launch } = require(\\"qawolf\\");
const selectors = require(\\"../selectors/scrollLogin\\");

describe('scrollLogin', () => {
  let context;

  beforeAll(async () => {
    context = await launch({ device: \\"iPhone 7\\", url: \\"localhost:5000\\" });
  });

  afterAll(() => context.close());

  it('can scroll', async () => {
    await context.scroll(selectors[0], { x: 0, y: 378 });
  });

  it('can click \\"Form Authentication\\" link', async () => {
    await context.click(selectors[1]);
  });

  it('can type into \\"Username\\" input', async () => {
    await context.type(selectors[2], \\"tomsmith\\");
  });

  it('can Tab', async () => {
    await context.type(selectors[3], \\"↓Tab↑Tab\\");
  });

  it('can type into \\"Password\\" input', async () => {
    await context.type(selectors[4], \\"SuperSecretPassword!\\");
  });

  it('can Enter', async () => {
    await context.type(selectors[5], \\"↓Enter↑Enter\\");
  });

  it('can click \\"Logout\\" link', async () => {
    await context.click(selectors[6]);
  });
});"
`;
